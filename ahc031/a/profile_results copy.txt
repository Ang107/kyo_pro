total executions of each stack trace:
Entry: 1/46 Calls: 115/321 = 35.83% [sum: 115; 115/321 = 35.83%]
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 2/46 Calls: 54/321 = 16.82% [sum: 169; 169/321 = 52.65%]
  macros.nim: % 54/321 = 16.82%
  macros.nim: // 100/321 = 31.15%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 3/46 Calls: 46/321 = 14.33% [sum: 215; 215/321 = 66.98%]
  macros.nim: // 100/321 = 31.15%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 4/46 Calls: 36/321 = 11.21% [sum: 251; 251/321 = 78.19%]
  system.nim: toFloat 36/321 = 11.21%
  system.nim: / 45/321 = 14.02%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 5/46 Calls: 9/321 = 2.80% [sum: 260; 260/321 = 81.00%]
  system.nim: / 45/321 = 14.02%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 6/46 Calls: 7/321 = 2.18% [sum: 267; 267/321 = 83.18%]
  algorithm.nim: reverse 7/321 = 2.18%
  algorithm.nim: reverse 7/321 = 2.18%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 7/46 Calls: 6/321 = 1.87% [sum: 273; 273/321 = 85.05%]
  algorithm.nim: reversed 10/321 = 3.12%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 8/46 Calls: 3/321 = 0.93% [sum: 276; 276/321 = 85.98%]
  arithmetics.nim: +% 17/321 = 5.30%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 9/46 Calls: 3/321 = 0.93% [sum: 279; 279/321 = 86.92%]
  arithmetics.nim: +% 17/321 = 5.30%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 10/46 Calls: 2/321 = 0.62% [sum: 281; 281/321 = 87.54%]
  arithmetics.nim: +% 17/321 = 5.30%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 11/46 Calls: 2/321 = 0.62% [sum: 283; 283/321 = 88.16%]
  system.nim: align 5/321 = 1.56%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 12/46 Calls: 2/321 = 0.62% [sum: 285; 285/321 = 88.79%]
  arithmetics.nim: +% 17/321 = 5.30%
  gc.nim: incRef 2/321 = 0.62%
  gc.nim: unsureAsgnRef 4/321 = 1.25%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 13/46 Calls: 2/321 = 0.62% [sum: 287; 287/321 = 89.41%]
  comparisons.nim: <=% 6/321 = 1.87%
  gc.nim: newObj 11/321 = 3.43%
  gc.nim: newSeq 9/321 = 2.80%
  algorithm.nim: reversed 10/321 = 3.12%
  test.nim: put 290/321 = 90.34%
  test.nim: get_ans 308/321 = 95.95%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
Entry: 14/46 Calls: 2/321 = 0.62% [sum: 289; 289/321 = 90.03%]
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssignAux 34/321 = 10.59%
  assign.nim: genericAssign 34/321 = 10.59%
  assign.nim: genericSeqAssign 35/321 = 10.90%
  test.nim: yamanobori 320/321 = 99.69%
  test.nim: get_h 320/321 = 99.69%
  test.nim: test 320/321 = 99.69%
